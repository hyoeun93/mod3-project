exit
path["shape"]["coordinates"][0][0][0]
path["shape"]["coordinates"][0][0][1]
path["park_name"]
path
path["pari_name"]
exit
c
Path.search(paths_params)
paths_params
path_params
Path.all
path_array.each do |path| end
path_array.each do |path|
1 +1
path_array.each do |path|
end
    )
    latitude: path["shape"]["coordinates"][0][0][1]
    longitude: path["shape"]["coordinates"][0][0][0],
    difficulty: path["difficulty"],
    trail_markers: path["trailmarkersinstalled"],
    topography: path["gen_topog"],
    surface_type: path["surface"],
    name: path["park_name"],
    Path.create(
    # byebug
path_array.each do |path|
path_array = JSON.parse(path_data)
path_data = RestClient.get('https://data.cityofnewyork.us/resource/vjbm-hsyr.json')
exit
Path.all
params[:difficulty]
Path.where(difficulty: params[:difficulty])
Path.where(paths_params)
@paths = Path.search(paths_params)
params
exit
params
exit
paths.first(10)
paths.first(5)
path.first(5)
paths.count
paths
Path.all.count
paths.count
paths
c
search["surface_type"]
search[:surface_type]
search["surface_type"]
search[":surface_type"]
search
paths
c
params
c
exit
c
params
c
params
c
params
c
params
c
params
c
params
c
params
paths_params
params
exit
params
exit
params
exit
params[:path]
params
c
search
paths
c
paths
c
paths
c
paths
c
paths
c
params
c
params
exit
params
exit
params
exit
params
paths
exit
paths.where(difficulty: 2)
paths.where(difficulty: search[":difficulty"])
paths.where(difficulty: search["difficulty"])
paths.find_by("difficulty")
paths
paths = Path.all
Path.all
paths
search
self.search
self
exit
path["surface"]
path[“surface”]
path["park_name"]
path[park_name]
path
path[“park_name”]
path
    )exit
    difficulty: path[“difficulty”]
    trail_markers: path[“trailmarkersinstalled”],
    topography: path[“gen_topog”],
    surface_type: path[“surface”],
    name: path[“park_name”],
    Path.create(
path = path_array[0]
exit
    )exit
    difficulty: path[“difficulty”]
    trail_markers: path[“trailmarkersinstalled”],
    topography: path[“gen_topog”],
    surface_type: path[“surface”],
    name: path[“park_name”],
    Path.create(
#     )exit
#     difficulty: path[“difficulty”]
#     trail_markers: path[“trailmarkersinstalled”],
#     topography: path[“gen_topog”],
#     surface_type: path[“surface”],
#     name: path[“park_name”],
   Path.create(
path
path = path_array[0]
exit
path_array
exit
path_array
exit
path_array
